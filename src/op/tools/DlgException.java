/*
 * OffenePflege
 * Copyright (C) 2008 Torsten Löhr
 * This program is free software; you can redistribute it and/or modify it under the terms of the 
 * GNU General Public License V2 as published by the Free Software Foundation
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even 
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General 
 * Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with this program; if not, write to 
 * the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA
 * www.offene-pflege.de
 * ------------------------ 
 * Auf deutsch (freie Übersetzung. Rechtlich gilt die englische Version)
 * Dieses Programm ist freie Software. Sie können es unter den Bedingungen der GNU General Public License, 
 * wie von der Free Software Foundation veröffentlicht, weitergeben und/oder modifizieren, gemäß Version 2 der Lizenz.
 *
 * Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, daß es Ihnen von Nutzen sein wird, aber 
 * OHNE IRGENDEINE GARANTIE, sogar ohne die implizite Garantie der MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN 
 * BESTIMMTEN ZWECK. Details finden Sie in der GNU General Public License.
 *
 * Sie sollten ein Exemplar der GNU General Public License zusammen mit diesem Programm erhalten haben. Falls nicht, 
 * schreiben Sie an die Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA.
 */

package op.tools;

import entity.SYSHosts;
import entity.SYSHostsTools;
import entity.SYSLoginTools;
import entity.SyslogTools;
import op.OPDE;

/**
 * 
 * @author  tloehr
 */
public class DlgException extends javax.swing.JDialog {
    private Exception exc;
    /** Creates new form DlgException */
    public DlgException(Exception ex) {
        super(new java.awt.Frame(), true);
        this.exc = ex;
        initComponents();
        String type = ex.getClass().getName();
        //this.lblHeader.setText("Ausnahmezustand: " + type);
        OPDE.getLogger().error("Ausnahmezustand: " + type, ex);
        txtException.setText(getExceptionAsHTML());
        txtException.setCaretPosition(0);
        SyslogTools.error(txtException.getText());
        this.setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnClose = new javax.swing.JButton();
        lblHeader = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtException = new javax.swing.JTextPane();
        btnPrint = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/artwork/22x22/infored.png"))); // NOI18N
        btnClose.setText("Schliessen");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        lblHeader.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(255, 0, 0));
        lblHeader.setText("Ausnahmezustand");

        jLabel2.setText("Es ist ein Fehler aufgetreten. Bitte verständigen Sie den Administrator.");

        txtException.setContentType("text/html");
        txtException.setEditable(false);
        jScrollPane1.setViewportView(txtException);

        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/artwork/22x22/printer.png"))); // NOI18N
        btnPrint.setText("Drucken");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/artwork/22x22/exit.png"))); // NOI18N
        btnExit.setText("Programm beenden");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, lblHeader, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(btnExit)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnPrint)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnClose)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(lblHeader)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnExit)
                    .add(btnPrint)
                    .add(btnClose))
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-769)/2, (screenSize.height-490)/2, 769, 490);
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        OPDE.fatal("Benutzer hat das Programm nach Exception beendet.");
        SYSHostsTools.shutdown();
        //OPDE.getDb().doLogout();
        SYSLoginTools.logout();
        System.exit(1);
    }//GEN-LAST:event_btnExitActionPerformed
    
    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed

        SYSPrint.print(this, txtException.getText(), true);

    }//GEN-LAST:event_btnPrintActionPerformed
    
    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnPrint;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JTextPane txtException;
    // End of variables declaration//GEN-END:variables
    
    
    private String getExceptionAsHTML() {
        String html = "";
        StackTraceElement[] stacktrace = exc.getStackTrace();


            html += "<h1>Ausnahmezustand aufgetreten</h1>";
            html += "<h2>"+exc.getClass().getName()+"</h2>";
            html += "<p>"+exc.getMessage()+"</p>";
            html += "<table border=\"1\" cellspacing=\"0\"><tr>"
                    + "<th>Methode</th><th>Zeile</th><th>Klasse</th><th>Datei</th></tr>";


            for (int exception = 0; exception < stacktrace.length; exception++ ){
                StackTraceElement element = stacktrace[exception];
                html += "<tr>";
                html += "<td>" + element.getMethodName() + "</td>";
                html += "<td>" + element.getLineNumber() + "</td>";
                html += "<td>" + element.getClassName() + "</td>";
                html += "<td>" + element.getFileName() + "</td>";
                html += "</tr>";
            }
            html += "</table>";


//        html = "<html><head>"
//                + "<title>" + SYSTools.getWindowTitle("") + "</title>"
//                + "<script type=\"text/javascript\">"
//                + "window.onload = function() {"
//                + "window.print();"
//                + "}</script></head><body>" + html + "</body></html>";
        return html;
    }
}
