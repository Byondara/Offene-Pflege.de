/*
 * OffenePflege
 * Copyright (C) 2008 Torsten Löhr
 * This program is free software; you can redistribute it and/or modify it under the terms of the 
 * GNU General Public License V2 as published by the Free Software Foundation
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even 
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General 
 * Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with this program; if not, write to 
 * the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA
 * www.offene-pflege.de
 * ------------------------ 
 * Auf deutsch (freie Übersetzung. Rechtlich gilt die englische Version)
 * Dieses Programm ist freie Software. Sie können es unter den Bedingungen der GNU General Public License, 
 * wie von der Free Software Foundation veröffentlicht, weitergeben und/oder modifizieren, gemäß Version 2 der Lizenz.
 *
 * Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, daß es Ihnen von Nutzen sein wird, aber 
 * OHNE IRGENDEINE GARANTIE, sogar ohne die implizite Garantie der MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN 
 * BESTIMMTEN ZWECK. Details finden Sie in der GNU General Public License.
 *
 * Sie sollten ein Exemplar der GNU General Public License zusammen mit diesem Programm erhalten haben. Falls nicht, 
 * schreiben Sie an die Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA.
 * 
 */

package op.bw.admin;

import op.OPDE;
import op.tools.SYSCalendar;
import op.tools.SYSTools;

import javax.swing.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * @author tloehr
 */
public class FrmBW extends javax.swing.JFrame {

    private boolean ignoreJDCEvent;

    /**
     * Creates new form frmBWNeu
     */
    public FrmBW() {
        this.setTitle(SYSTools.getWindowTitle(""));
        initComponents();

        txtName.setText("");
        txtVorname.setText("");
        jdcGebDatum.setDate(new Date());
        jdcGebDatum.setMaxSelectableDate(new Date());
        jdcGebDatum.getDateEditor().addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                if (evt.getPropertyName().equals("value")) {
                    SYSCalendar.checkJDC(jdcGebDatum);
                }
            }
        });

        rbMann.setSelected(true);
        btnSave.setEnabled(false);

        setVisible(true);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lbl = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jdcGebDatum = new com.toedter.calendar.JDateChooser();
        txtName = new javax.swing.JTextField();
        txtVorname = new javax.swing.JTextField();
        rbMann = new javax.swing.JRadioButton();
        rbFrau = new javax.swing.JRadioButton();
        btnDiscard = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        lbl.setFont(new java.awt.Font("Dialog", 1, 18));
        lbl.setText("Neue(n) BewohnerIn anlegen");

        jLabel2.setText("Name:");

        jLabel3.setText("Vorname:");

        jLabel4.setText("Geburtsdatum:");

        jLabel5.setText("Geschlecht:");

        txtName.setText("jTextField1");
        txtName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtNameCaretUpdate(evt);
            }
        });

        txtVorname.setText("jTextField2");
        txtVorname.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtVornameCaretUpdate(evt);
            }
        });

        buttonGroup1.add(rbMann);
        rbMann.setText("männlich");
        rbMann.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbMann.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup1.add(rbFrau);
        rbFrau.setText("weiblich");
        rbFrau.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rbFrau.setMargin(new java.awt.Insets(0, 0, 0, 0));

        btnDiscard.setText("Verwerfen");
        btnDiscard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiscardActionPerformed(evt);
            }
        });

        btnSave.setText("Speichern");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                                .addContainerGap()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(jSeparator2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                                        .add(jSeparator1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                                        .add(lbl)
                                        .add(layout.createSequentialGroup()
                                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                        .add(jLabel2)
                                                        .add(jLabel3)
                                                        .add(jLabel4)
                                                        .add(jLabel5))
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                        .add(layout.createSequentialGroup()
                                                                .add(rbMann)
                                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                                .add(rbFrau))
                                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                                                .add(txtVorname)
                                                                .add(jdcGebDatum, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                                                .add(txtName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 196, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                                .add(btnSave)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(btnDiscard)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                                .addContainerGap()
                                .add(lbl)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(jLabel2)
                                        .add(txtName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(jLabel3)
                                        .add(txtVorname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(jLabel4)
                                        .add(jdcGebDatum, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(14, 14, 14)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(jLabel5)
                                        .add(rbMann)
                                        .add(rbFrau))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(btnDiscard)
                                        .add(btnSave))
                                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width - 347) / 2, (screenSize.height - 243) / 2, 347, 243);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        PreparedStatement qStmt;

        String s = "SELECT Nachname, Vorname, GebDatum FROM Bewohner WHERE Nachname like ? ORDER BY Nachname, Vorname";
        String muster = "%" + txtName.getText() + "%";
        try {
            qStmt = OPDE.getDb().db.prepareStatement(s);
            qStmt.setString(1, muster);
            ResultSet rs = qStmt.executeQuery();
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");

            if (rs.first()) { // Es gibt schon ähnliche Bewohnernamen. Nur Speichern, wenn wirklich gewünscht.
                rs.beforeFirst();
                DefaultListModel dlm = new DefaultListModel();
                while (rs.next()) {
                    dlm.addElement(rs.getString("Nachname") + ", " + rs.getString("Vorname") + " (*" + sdf.format(rs.getDate("GebDatum")) + ")");
                }
                DlgBewVorhanden dlg = new DlgBewVorhanden(this, dlm);
                if (dlg.isOK()) {
                    insert();
                }
            } else insert(); // Es gab keine ähnlichen. Wir können direkt speichern.

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        dispose();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtVornameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtVornameCaretUpdate
        btnSave.setEnabled(txtName.getText().length() > 0 & txtVorname.getText().length() > 0);
    }//GEN-LAST:event_txtVornameCaretUpdate

    private void insert() {
        String prefix = txtName.getText().substring(0, 1) + txtVorname.getText().substring(0, 1);
        prefix = prefix.toUpperCase();
        Long suffix = new Long(OPDE.getDb().getUID(prefix));
        String bwkennung = prefix + suffix.toString();
        int geschlecht = (rbMann.isSelected() ? 1 : 2);

        // Daten in der Tabelle Bewohner
        String preparedQuery = "INSERT INTO Bewohner (Nachname, Vorname, Geschlecht, GebDatum, BWKennung) VALUES (?, ?, ?, ?, ?)";
        try {
            PreparedStatement iStmt = OPDE.getDb().db.prepareStatement(preparedQuery);
            iStmt.setString(1, txtName.getText().trim());
            iStmt.setString(2, txtVorname.getText().trim());
            iStmt.setInt(3, geschlecht);
            iStmt.setDate(4, new java.sql.Date(jdcGebDatum.getDate().getTime()));
            iStmt.setString(5, bwkennung);
            iStmt.executeUpdate();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        JOptionPane.showMessageDialog(this, "Es wurde ein(e) neue(r) BewohnerIn angelegt. Ihre Kennung lautet: " + bwkennung);

    }

    private void btnDiscardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiscardActionPerformed
        dispose();
    }//GEN-LAST:event_btnDiscardActionPerformed

    public void dispose() {
        jdcGebDatum.cleanup();
        SYSTools.unregisterListeners(this);
        super.dispose();
    }

    private void txtNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtNameCaretUpdate
        btnSave.setEnabled(txtName.getText().length() > 0 & txtVorname.getText().length() > 0);
    }//GEN-LAST:event_txtNameCaretUpdate

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDiscard;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private com.toedter.calendar.JDateChooser jdcGebDatum;
    private javax.swing.JLabel lbl;
    private javax.swing.JRadioButton rbFrau;
    private javax.swing.JRadioButton rbMann;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtVorname;
    // End of variables declaration//GEN-END:variables

}
