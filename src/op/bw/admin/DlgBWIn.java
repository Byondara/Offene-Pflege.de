/*
 * OffenePflege
 * Copyright (C) 2008 Torsten Löhr
 * This program is free software; you can redistribute it and/or modify it under the terms of the 
 * GNU General Public License V2 as published by the Free Software Foundation
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even 
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General 
 * Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with this program; if not, write to 
 * the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA
 * www.offene-pflege.de
 * ------------------------ 
 * Auf deutsch (freie Übersetzung. Rechtlich gilt die englische Version)
 * Dieses Programm ist freie Software. Sie können es unter den Bedingungen der GNU General Public License, 
 * wie von der Free Software Foundation veröffentlicht, weitergeben und/oder modifizieren, gemäß Version 2 der Lizenz.
 *
 * Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, daß es Ihnen von Nutzen sein wird, aber 
 * OHNE IRGENDEINE GARANTIE, sogar ohne die implizite Garantie der MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN 
 * BESTIMMTEN ZWECK. Details finden Sie in der GNU General Public License.
 *
 * Sie sollten ein Exemplar der GNU General Public License zusammen mit diesem Programm erhalten haben. Falls nicht, 
 * schreiben Sie an die Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA.
 * 
 */

package op.bw.admin;

import java.awt.*;
import java.awt.event.*;
import com.toedter.calendar.*;
import op.OPDE;
import op.tools.DBHandling;
import op.tools.SYSCalendar;
import op.tools.SYSTools;

import javax.swing.*;
import java.util.Date;
import java.util.HashMap;

/**
 * @author tloehr
 */
public class DlgBWIn extends javax.swing.JDialog {
    //    private PropertyChangeListener pclIn;
    private String bwkennung;

    /**
     * Creates new form DlgInOut
     *
     * @param
     */
    public DlgBWIn(java.awt.Frame parent, Date minDate, String bwkennung) {
        super(parent, true);
        initComponents();
        this.bwkennung = bwkennung;

//        pclIn = new java.beans.PropertyChangeListener() {
//            public void propertyChange(java.beans.PropertyChangeEvent evt) {
//                if (evt.getPropertyName().equals("date")) {
//                    btnSubmit.setEnabled(SYSCalendar.isJDCValid(jdcIn));
//                }
//            }
//        };
//        
//        jdcIn.getDateEditor().addPropertyChangeListener(pclIn);
        jdcIn.setMinSelectableDate(minDate);
        //jdcIn.setMaxSelectableDate(SYSCalendar.today_date());
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        lblDaten = new JLabel();
        jSeparator1 = new JSeparator();
        jLabel1 = new JLabel();
        jdcIn = new JDateChooser();
        jSeparator2 = new JSeparator();
        btnCancel = new JButton();
        btnSubmit = new JButton();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        Container contentPane = getContentPane();

        //---- lblDaten ----
        lblDaten.setFont(new Font("Dialog", Font.BOLD, 18));
        lblDaten.setText("Einzug des/der BewohnerIn");

        //---- jLabel1 ----
        jLabel1.setText("Der/Die Bewohnerin zieht ein am:");

        //---- btnCancel ----
        btnCancel.setIcon(new ImageIcon(getClass().getResource("/artwork/22x22/cancel.png")));
        btnCancel.setText("Abbrechen");
        btnCancel.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnCancelActionPerformed(e);
            }
        });

        //---- btnSubmit ----
        btnSubmit.setIcon(new ImageIcon(getClass().getResource("/artwork/22x22/apply.png")));
        btnSubmit.setText("Ok");
        btnSubmit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnSubmitActionPerformed(e);
            }
        });

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(contentPaneLayout.createParallelGroup()
                        .addComponent(jSeparator2, GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                        .addComponent(jSeparator1, GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                        .addComponent(lblDaten, GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                        .addGroup(contentPaneLayout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jdcIn, GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                        .addGroup(GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
                            .addComponent(btnSubmit)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnCancel)))
                    .addContainerGap())
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblDaten)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)
                        .addComponent(jdcIn, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jSeparator2, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCancel)
                        .addComponent(btnSubmit))
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        setSize(381, 165);
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        if (!SYSCalendar.isJDCValid(jdcIn)) {
            JOptionPane.showMessageDialog(this, "Das eingegebene Datum ist ungültig.", "Heimaufnahme nicht möglich", JOptionPane.INFORMATION_MESSAGE);
        } else {
            HashMap hm = new HashMap();
            hm.put("BWKennung", this.bwkennung);
            hm.put("BWINFTYP", "hauf");
            hm.put("Von", jdcIn.getDate());
            hm.put("Bis", "!BAW!");
            hm.put("XML", "<hauf/>");
            hm.put("AnUKennung", OPDE.getLogin().getUser().getUKennung());
            DBHandling.insertRecord("BWInfo", hm);
            this.dispose();
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    public void dispose() {
//        jdcIn.getDateEditor().removePropertyChangeListener(pclIn);
        jdcIn.cleanup();
        SYSTools.unregisterListeners(this);
        super.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel lblDaten;
    private JSeparator jSeparator1;
    private JLabel jLabel1;
    private JDateChooser jdcIn;
    private JSeparator jSeparator2;
    private JButton btnCancel;
    private JButton btnSubmit;
    // End of variables declaration//GEN-END:variables

}
