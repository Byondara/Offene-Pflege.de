/*
 * OffenePflege
 * Copyright (C) 2008 Torsten Löhr
 * This program is free software; you can redistribute it and/or modify it under the terms of the
 * GNU General Public License V2 as published by the Free Software Foundation
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
 * Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program; if not, write to
 * the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA
 * www.offene-pflege.de
 * ------------------------
 * Auf deutsch (freie Übersetzung. Rechtlich gilt die englische Version)
 * Dieses Programm ist freie Software. Sie können es unter den Bedingungen der GNU General Public License,
 * wie von der Free Software Foundation veröffentlicht, weitergeben und/oder modifizieren, gemäß Version 2 der Lizenz.
 *
 * Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, daß es Ihnen von Nutzen sein wird, aber
 * OHNE IRGENDEINE GARANTIE, sogar ohne die implizite Garantie der MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN
 * BESTIMMTEN ZWECK. Details finden Sie in der GNU General Public License.
 *
 * Sie sollten ein Exemplar der GNU General Public License zusammen mit diesem Programm erhalten haben. Falls nicht,
 * schreiben Sie an die Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA.
 *
 */
package op.share.vorgang;

import java.awt.event.*;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;
import javax.swing.border.*;
import javax.swing.event.*;
import com.toedter.calendar.*;
import op.OPDE;
import op.tools.*;

import java.awt.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;

/**
 * @author tloehr
 */
public class DlgVorgang extends javax.swing.JDialog {

    private Object[] template;
    private Component parent;
    private String bwkennung = "";
    private long vorgangid;
    private long vkatid;

    /**
     * @param parent
     * @param template. Das Template ist ein Array of Object. Diese Klasse erwartet darin
     *                  die Vorgaben zur Änderung eines Vorgangs. Das Array sollte wie folgt augebaut sein:
     *                  (<bwkennung>,<vorgangid>,<Titel>)
     */
    public DlgVorgang(java.awt.Frame parent, Object[] template) {
        super(parent, true);
        this.template = template;
        this.parent = parent;
        initComponents();
        initDialog();
    }

    //    public DlgVorgang(JDialog parent, Object[] template) {
//        super(parent, true);
//        this.template = template;
//        this.parent = parent;
//        initComponents();
//        initDialog();
//    }
    public long getID() {
        return vorgangid;
    }

    private void initDialog() {
        bwkennung = SYSTools.catchNull(template.length == 0 ? "" : template[0]);

        if (bwkennung.equals("")) {
            lblTitle.setText("Vorgang eingeben (allgemein)");
        } else {
            lblTitle.setText("Vorgang eingeben für: " + SYSTools.getBWLabel(bwkennung));
        }
        this.pack();

        // Liste aller Vorgangskategorien
        ResultSet rs = DBRetrieve.getResultSet("VKat", new String[]{"VKatID", "Text"}, new String[]{"Text"});
        cmbArt.setModel(SYSTools.rs2cmb(rs));
        cmbArt.setVisible(true);
        if (template == null || template.length <= 1) { // Neueingabe
            this.vorgangid = 0;
            txtTitel.setText("");
            setTitle(SYSTools.getWindowTitle("Neueingabe Vorgang"));
            this.vkatid = -1;
            cmbArt.setSelectedIndex(-1);
            jdcDatum.setDate(SYSCalendar.addDate(SYSCalendar.today_date(), 7)); // Erste WV in einer Woche.
        } else {
            this.vorgangid = (Long) template[1];
            txtTitel.setText(template[2].toString());
            this.vkatid = (Long) DBRetrieve.getSingleValue("Vorgaenge", "VKatID", "VorgangID", vorgangid);
            SYSTools.selectInComboBox(cmbArt, vkatid);
            setTitle(SYSTools.getWindowTitle("Bearbeiten Vorgang"));
            jdcDatum.setEnabled(false);
        }
        SYSTools.centerOnParent(parent, this);
        setVisible(true);

    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        lblTitle = new JLabel();
        jPanel1 = new JPanel();
        jLabel1 = new JLabel();
        txtTitel = new JTextField();
        cmbArt = new JComboBox();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jdcDatum = new JDateChooser();
        btnCancel = new JButton();
        btnSave = new JButton();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        Container contentPane = getContentPane();

        //---- lblTitle ----
        lblTitle.setFont(new Font("Dialog", Font.BOLD, 18));
        lblTitle.setText("Vorgang eingeben");

        //======== jPanel1 ========
        {
            jPanel1.setBorder(new SoftBevelBorder(SoftBevelBorder.RAISED));

            //---- jLabel1 ----
            jLabel1.setText("Titel");

            //---- txtTitel ----
            txtTitel.setText("txtTitel");
            txtTitel.addCaretListener(new CaretListener() {
                @Override
                public void caretUpdate(CaretEvent e) {
                    txtTitelCaretUpdate(e);
                }
            });

            //---- cmbArt ----
            cmbArt.setModel(new DefaultComboBoxModel(new String[] {
                "Item 1",
                "Item 2",
                "Item 3",
                "Item 4"
            }));
            cmbArt.setToolTipText("Kategorie");
            cmbArt.addItemListener(new ItemListener() {
                @Override
                public void itemStateChanged(ItemEvent e) {
                    cmbArtItemStateChanged(e);
                }
            });

            //---- jLabel2 ----
            jLabel2.setText("Kategorie");

            //---- jLabel3 ----
            jLabel3.setText("Wiedervorlage:");

            GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup()
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup()
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup()
                            .addComponent(txtTitel, GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                            .addComponent(cmbArt, 0, 322, Short.MAX_VALUE)
                            .addComponent(jdcDatum, GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE))
                        .addContainerGap())
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup()
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtTitel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbArt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup()
                            .addComponent(jdcDatum, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addContainerGap(20, Short.MAX_VALUE))
            );
        }

        //---- btnCancel ----
        btnCancel.setIcon(new ImageIcon(getClass().getResource("/artwork/22x22/cancel.png")));
        btnCancel.setText("Abbrechen");
        btnCancel.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnCancelActionPerformed(e);
            }
        });

        //---- btnSave ----
        btnSave.setIcon(new ImageIcon(getClass().getResource("/artwork/22x22/apply.png")));
        btnSave.setText("Speichern");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnSaveActionPerformed(e);
            }
        });

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
                    .addContainerGap(674, Short.MAX_VALUE)
                    .addComponent(btnSave)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnCancel)
                    .addContainerGap())
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblTitle, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap())
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblTitle)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCancel)
                        .addComponent(btnSave))
                    .addContainerGap(181, Short.MAX_VALUE))
        );
        pack();
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

    private void txtTitelCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTitelCaretUpdate
        saveOK();
    }//GEN-LAST:event_txtTitelCaretUpdate

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        HashMap hm = new HashMap();

        hm.put("Titel", txtTitel.getText());
        hm.put("Besitzer", OPDE.getLogin().getUser().getUKennung());
        hm.put("WV", jdcDatum.getDate());
        hm.put("VKatID", ((ListElement) cmbArt.getSelectedItem()).getPk());

        boolean doCommit = false;
        Connection db = OPDE.getDb().db;
        try {
            // Hier beginnt eine Transaktion, wenn es nicht schon eine gibt.
            if (db.getAutoCommit()) {
                db.setAutoCommit(false);
                db.setTransactionIsolation(Connection.TRANSACTION_READ_UNCOMMITTED);
                db.commit();
                doCommit = true;
            }

            if (vorgangid != 0) { // Bearbeiten
                if (!op.tools.DBHandling.updateRecord("Vorgaenge", hm, "VorgangID", vorgangid)) {
                    throw new SQLException("Vorgang konnte nicht geändert werden.");
                }
            } else { // Neueingabe
                hm.put("Von", "!NOW!");
                hm.put("Bis", "!BAW!");
                hm.put("BWKennung", bwkennung);
                hm.put("Ersteller", OPDE.getLogin().getUser().getUKennung());

                vorgangid = op.tools.DBHandling.insertRecord("Vorgaenge", hm);

                if (vorgangid < 0) {
                    throw new SQLException("Neuer Vorgang konnte nicht erstellt werden.");
                }

                if (DBHandling.newVBericht(vorgangid, "Neuer Vorgang erstellt", DBHandling.VBERICHT_ART_CREATE) < 0) {
                    throw new SQLException("Neuer VBericht konnte nicht erstellt werden.");
                }

            }

            if (doCommit) {
                db.commit();
                db.setAutoCommit(true);
            }
            setVisible(false);
        } catch (SQLException ex) {
            try {
                if (doCommit) {
                    db.rollback();
                }
                vorgangid = -1;
            } catch (SQLException ex1) {
                new DlgException(ex1);
                ex1.printStackTrace();
                System.exit(1);
            }
            new DlgException(ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void saveOK() {
        boolean saveOK = !txtTitel.getText().equals("") && cmbArt.getSelectedIndex() > -1;
        btnSave.setEnabled(saveOK);
    }

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed

        vorgangid = 0;
        setVisible(false);

    }//GEN-LAST:event_btnCancelActionPerformed

    private void cmbArtItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbArtItemStateChanged
        saveOK();
    }//GEN-LAST:event_cmbArtItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel lblTitle;
    private JPanel jPanel1;
    private JLabel jLabel1;
    private JTextField txtTitel;
    private JComboBox cmbArt;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JDateChooser jdcDatum;
    private JButton btnCancel;
    private JButton btnSave;
    // End of variables declaration//GEN-END:variables
}
