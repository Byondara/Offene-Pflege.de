/*
 * OffenePflege
 * Copyright (C) 2008 Torsten Löhr
 * This program is free software; you can redistribute it and/or modify it under the terms of the 
 * GNU General Public License V2 as published by the Free Software Foundation
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even 
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General 
 * Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with this program; if not, write to 
 * the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA
 * www.offene-pflege.de
 * ------------------------ 
 * Auf deutsch (freie Übersetzung. Rechtlich gilt die englische Version)
 * Dieses Programm ist freie Software. Sie können es unter den Bedingungen der GNU General Public License, 
 * wie von der Free Software Foundation veröffentlicht, weitergeben und/oder modifizieren, gemäß Version 2 der Lizenz.
 *
 * Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, daß es Ihnen von Nutzen sein wird, aber 
 * OHNE IRGENDEINE GARANTIE, sogar ohne die implizite Garantie der MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN 
 * BESTIMMTEN ZWECK. Details finden Sie in der GNU General Public License.
 *
 * Sie sollten ein Exemplar der GNU General Public License zusammen mit diesem Programm erhalten haben. Falls nicht, 
 * schreiben Sie an die Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA.
 * 
 */

package op.care.med;

import entity.EntityTools;
import entity.verordnungen.*;
import op.OPDE;
import op.tools.SYSTools;

import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.*;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

/**
 * @author tloehr
 */
public class DlgProdukt extends javax.swing.JDialog {

    private MedProdukte produkt;

    /**
     * Creates new form DlgProdukt
     */
    public DlgProdukt(JFrame parent, MedProdukte produkt, String template) {
        super(parent, true);
        this.produkt = produkt;
        initComponents();
        SYSTools.centerOnParent(parent, this);
        txtBezeichnung.setText(template);

        EntityManager em = OPDE.createEM();
        Query query2 = em.createNamedQuery("MedHersteller.findAll");
        cmbHersteller.setModel(new DefaultComboBoxModel(query2.getResultList().toArray(new MedHersteller[]{})));
        cmbHersteller.setRenderer(MedHerstellerTools.getHerstellerRenderer(0));
        em.close();

        if (produkt != null){
            cmbHersteller.setSelectedItem(produkt.getHersteller());
        }

        setVisible(true);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Erzeugter Quelltext ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new JLabel();
        jSeparator1 = new JSeparator();
        jLabel2 = new JLabel();
        txtBezeichnung = new JTextField();
        jSeparator2 = new JSeparator();
        btnCancel = new JButton();
        btnOK = new JButton();
        cmbHersteller = new JComboBox();
        jLabel3 = new JLabel();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        Container contentPane = getContentPane();

        //---- jLabel1 ----
        jLabel1.setFont(new Font("Dialog", Font.BOLD, 14));
        jLabel1.setText("Neues Medizinprodukt");

        //---- jLabel2 ----
        jLabel2.setText("Produktname:");

        //---- txtBezeichnung ----
        txtBezeichnung.addCaretListener(new CaretListener() {
            @Override
            public void caretUpdate(CaretEvent e) {
                txtBezeichnungCaretUpdate(e);
            }
        });

        //---- btnCancel ----
        btnCancel.setIcon(new ImageIcon(getClass().getResource("/artwork/16x16/cancel.png")));
        btnCancel.setText("Abbrechen");
        btnCancel.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnCancelActionPerformed(e);
            }
        });

        //---- btnOK ----
        btnOK.setIcon(new ImageIcon(getClass().getResource("/artwork/16x16/apply.png")));
        btnOK.setText("OK");
        btnOK.setEnabled(false);
        btnOK.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                btnOKActionPerformed(e);
            }
        });

        //---- cmbHersteller ----
        cmbHersteller.setModel(new DefaultComboBoxModel(new String[] {
            "Eintrag 1",
            "Eintrag 2",
            "Eintrag 3",
            "Eintrag 4"
        }));
        cmbHersteller.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                cmbHerstellerItemStateChanged(e);
            }
        });

        //---- jLabel3 ----
        jLabel3.setText("Hersteller:");

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(contentPaneLayout.createParallelGroup()
                                .addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                                .addComponent(jSeparator1, GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                                .addComponent(jSeparator2, GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                                .addGroup(GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
                                        .addComponent(btnOK)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnCancel))
                                .addGroup(contentPaneLayout.createSequentialGroup()
                                        .addGroup(contentPaneLayout.createParallelGroup()
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel3))
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(contentPaneLayout.createParallelGroup()
                                                .addComponent(cmbHersteller, 0, 377, Short.MAX_VALUE)
                                                .addComponent(txtBezeichnung, GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE))))
                        .addContainerGap())
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(txtBezeichnung, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(cmbHersteller, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(jSeparator2, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(btnCancel)
                                .addComponent(btnOK))
                        .addContainerGap())
        );
        setSize(490, 220);
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbHerstellerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbHerstellerItemStateChanged
        btnOK.setEnabled(!txtBezeichnung.getText().equals("") && cmbHersteller.getSelectedIndex() > 0);
    }//GEN-LAST:event_cmbHerstellerItemStateChanged

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed

        EntityManager em = OPDE.createEM();
        Query query = em.createNamedQuery("MedProdukte.findByBezeichnung");
        query.setParameter("bezeichnung", txtBezeichnung.getText());
        java.util.List<MedProdukte> list = query.getResultList();
        em.close();

        if (list.isEmpty()) {
            MedHersteller hersteller = (MedHersteller) cmbHersteller.getSelectedItem();
            produkt = new MedProdukte(hersteller, txtBezeichnung.getText());
            EntityTools.persist(produkt);
            dispose();
        }
    }//GEN-LAST:event_btnOKActionPerformed

    public MedProdukte getProdukt() {
        return produkt;
    }

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        produkt = null;
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtBezeichnungCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtBezeichnungCaretUpdate
        btnOK.setEnabled(!txtBezeichnung.getText().equals("") && cmbHersteller.getSelectedIndex() > 0);
    }//GEN-LAST:event_txtBezeichnungCaretUpdate


    // Variablendeklaration - nicht modifizieren//GEN-BEGIN:variables
    private JLabel jLabel1;
    private JSeparator jSeparator1;
    private JLabel jLabel2;
    private JTextField txtBezeichnung;
    private JSeparator jSeparator2;
    private JButton btnCancel;
    private JButton btnOK;
    private JComboBox cmbHersteller;
    private JLabel jLabel3;
    // Ende der Variablendeklaration//GEN-END:variables

}
