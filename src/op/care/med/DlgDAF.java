/*
 * OffenePflege
 * Copyright (C) 2006-2012 Torsten Löhr
 * This program is free software; you can redistribute it and/or modify it under the terms of the 
 * GNU General Public License V2 as published by the Free Software Foundation
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even 
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General 
 * Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with this program; if not, write to 
 * the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA
 * www.offene-pflege.de
 * ------------------------ 
 * Auf deutsch (freie Übersetzung. Rechtlich gilt die englische Version)
 * Dieses Programm ist freie Software. Sie können es unter den Bedingungen der GNU General Public License, 
 * wie von der Free Software Foundation veröffentlicht, weitergeben und/oder modifizieren, gemäß Version 2 der Lizenz.
 *
 * Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, daß es Ihnen von Nutzen sein wird, aber 
 * OHNE IRGENDEINE GARANTIE, sogar ohne die implizite Garantie der MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN 
 * BESTIMMTEN ZWECK. Details finden Sie in der GNU General Public License.
 *
 * Sie sollten ein Exemplar der GNU General Public License zusammen mit diesem Programm erhalten haben. Falls nicht, 
 * schreiben Sie an die Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA.
 * 
 */

package op.care.med;

import com.jgoodies.forms.factories.CC;
import com.jgoodies.forms.layout.FormLayout;
import entity.prescription.DosageForm;
import entity.prescription.DosageFormTools;
import entity.prescription.TradeForm;
import op.OPDE;
import op.tools.MyJDialog;
import op.tools.SYSTools;

import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

/**
 * @author root
 */
public class DlgDAF extends MyJDialog {
    private TradeForm tradeForm;
    private boolean editMode;


    public DlgDAF(String title, TradeForm tradeForm) {
        super();
        initComponents();
        this.tradeForm = tradeForm;
        EntityManager em = OPDE.createEM();
        Query query = em.createQuery("SELECT m FROM DosageForm m ORDER BY m.preparation, m.usageText");
        cmbForm.setModel(new DefaultComboBoxModel(query.getResultList().toArray(new DosageForm[]{})));
        cmbForm.setRenderer(DosageFormTools.getRenderer(0));
        em.close();
        editMode = tradeForm.getID() != null;

        if (editMode) {
            cmbForm.setSelectedItem(tradeForm.getDosageForm());
            txtZusatz.setText(SYSTools.catchNull(tradeForm.getSubtext()));
        } else {
            cmbForm.setSelectedIndex(1);
        }

        pack();
        setVisible(true);
    }


    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the PrinterForm Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new JPanel();
        jLabel2 = new JLabel();
        txtZusatz = new JTextField();
        jLabel3 = new JLabel();
        cmbForm = new JComboBox();
        panel1 = new JPanel();
        btnCancel = new JButton();
        btnOK = new JButton();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        Container contentPane = getContentPane();
        contentPane.setLayout(new BoxLayout(contentPane, BoxLayout.X_AXIS));

        //======== jPanel1 ========
        {
            jPanel1.setLayout(new FormLayout(
                "14dlu, $lcgap, default, $lcgap, default:grow, $lcgap, 14dlu",
                "fill:14dlu, 4*($lgap, fill:default), $lgap, 14dlu"));

            //---- jLabel2 ----
            jLabel2.setText("Zusatzbezeichnung:");
            jLabel2.setFont(new Font("Arial", Font.PLAIN, 14));
            jPanel1.add(jLabel2, CC.xy(3, 3));

            //---- txtZusatz ----
            txtZusatz.setFont(new Font("Arial", Font.PLAIN, 14));
            jPanel1.add(txtZusatz, CC.xy(5, 3));

            //---- jLabel3 ----
            jLabel3.setText("Form:");
            jLabel3.setFont(new Font("Arial", Font.PLAIN, 14));
            jPanel1.add(jLabel3, CC.xy(3, 5));

            //---- cmbForm ----
            cmbForm.setModel(new DefaultComboBoxModel(new String[] {
                "Item 1",
                "Item 2",
                "Item 3",
                "Item 4"
            }));
            cmbForm.setFont(new Font("Arial", Font.PLAIN, 14));
            jPanel1.add(cmbForm, CC.xy(5, 5));

            //======== panel1 ========
            {
                panel1.setLayout(new BoxLayout(panel1, BoxLayout.X_AXIS));

                //---- btnCancel ----
                btnCancel.setIcon(new ImageIcon(getClass().getResource("/artwork/16x16/cancel.png")));
                btnCancel.setText(null);
                btnCancel.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        btnCancelActionPerformed(e);
                    }
                });
                panel1.add(btnCancel);

                //---- btnOK ----
                btnOK.setIcon(new ImageIcon(getClass().getResource("/artwork/16x16/apply.png")));
                btnOK.setText(null);
                btnOK.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        btnOKActionPerformed(e);
                    }
                });
                panel1.add(btnOK);
            }
            jPanel1.add(panel1, CC.xy(5, 9, CC.RIGHT, CC.DEFAULT));
        }
        contentPane.add(jPanel1);
        pack();
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        EntityManager em = OPDE.createEM();
        try {
            em.getTransaction().begin();
            TradeForm myTradeForm = em.merge(tradeForm);
            myTradeForm.setSubtext(txtZusatz.getText());
            myTradeForm.setDosageForm((DosageForm) cmbForm.getSelectedItem());
            em.getTransaction().commit();
        } catch (Exception e) {
            if (em.getTransaction().isActive()) {
                em.getTransaction().rollback();
            }
            OPDE.fatal(e);
        } finally {
            em.close();
        }
        dispose();
    }//GEN-LAST:event_btnOKActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel jPanel1;
    private JLabel jLabel2;
    private JTextField txtZusatz;
    private JLabel jLabel3;
    private JComboBox cmbForm;
    private JPanel panel1;
    private JButton btnCancel;
    private JButton btnOK;
    // End of variables declaration//GEN-END:variables

}
