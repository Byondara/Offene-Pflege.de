/*
 * OffenePflege
 * Copyright (C) 2008 Torsten Löhr
 * This program is free software; you can redistribute it and/or modify it under the terms of the 
 * GNU General Public License V2 as published by the Free Software Foundation
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even 
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General 
 * Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with this program; if not, write to 
 * the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA
 * www.offene-pflege.de
 * ------------------------ 
 * Auf deutsch (freie Übersetzung. Rechtlich gilt die englische Version)
 * Dieses Programm ist freie Software. Sie können es unter den Bedingungen der GNU General Public License, 
 * wie von der Free Software Foundation veröffentlicht, weitergeben und/oder modifizieren, gemäß Version 2 der Lizenz.
 *
 * Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, daß es Ihnen von Nutzen sein wird, aber 
 * OHNE IRGENDEINE GARANTIE, sogar ohne die implizite Garantie der MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN 
 * BESTIMMTEN ZWECK. Details finden Sie in der GNU General Public License.
 *
 * Sie sollten ein Exemplar der GNU General Public License zusammen mit diesem Programm erhalten haben. Falls nicht, 
 * schreiben Sie an die Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA.
 * 
 */
package op.care.med.vorrat;

import java.awt.Frame;
import java.math.BigInteger;
import java.sql.SQLException;
import java.util.HashMap;
import op.OPDE;
import op.care.med.DBHandling;
import op.tools.DlgException;
import op.tools.SYSTools;

/**
 *
 * @author  tloehr
 */
public class DlgBestandAbschliessen extends javax.swing.JDialog {

    private long bestid;
    private long vorid;
    private long dafid;
    private int formstatus;
    private Frame parent;

    /** Creates new form DlgBestandAnbruch */
    public DlgBestandAbschliessen(Frame parent, long bestid) {
        super(parent, true);
        this.bestid = bestid;
        this.parent = parent;
        this.vorid = ((BigInteger) op.tools.DBHandling.getSingleValue("MPBestand", "VorID", "BestID", bestid)).longValue();
        this.dafid = ((BigInteger) op.tools.DBHandling.getSingleValue("MPBestand", "DafID", "BestID", bestid)).longValue();
        long formid = ((BigInteger) op.tools.DBHandling.getSingleValue("MPDarreichung", "FormID", "DafID", dafid)).longValue();
        this.formstatus = ((Integer) op.tools.DBHandling.getSingleValue("MPFormen", "Status", "FormID", formid)).intValue();
        initComponents();
        initDialog();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtInfo = new javax.swing.JTextPane();
        rbLeer = new javax.swing.JRadioButton();
        rbStellen = new javax.swing.JRadioButton();
        txtLetzte = new javax.swing.JTextField();
        lblEinheiten = new javax.swing.JLabel();
        rbAbgelaufen = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        cmbBestID = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        rbGefallen = new javax.swing.JRadioButton();
        btnClose = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 16));
        jLabel1.setText("Bestand abschließen");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtInfo.setEditable(false);
        jScrollPane1.setViewportView(txtInfo);

        buttonGroup1.add(rbLeer);
        rbLeer.setSelected(true);
        rbLeer.setText("Die Packung ist nun leer");
        rbLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbLeerActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbStellen);
        rbStellen.setText("Beim Vorab Stellen haben Sie die letzten ");
        rbStellen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbStellenActionPerformed(evt);
            }
        });

        txtLetzte.setText("jTextField1");
        txtLetzte.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLetzteFocusLost(evt);
            }
        });

        lblEinheiten.setText("Einheiten verbraucht.");

        buttonGroup1.add(rbAbgelaufen);
        rbAbgelaufen.setText("Die Packung ist abgelaufen oder wird nicht mehr benötigt. Bereit zur Entsorgung.");
        rbAbgelaufen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAbgelaufenActionPerformed(evt);
            }
        });

        jLabel2.setText("Als nächstes Packung soll die Nummer:");

        cmbBestID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbBestID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbBestIDItemStateChanged(evt);
            }
        });

        jLabel3.setText("angebrochen werden.");

        buttonGroup1.add(rbGefallen);
        rbGefallen.setText("<html>Die Packung ist <font color=\"red\">runter gefallen</font> oder <font color=\"red\">verschwunden</font> und muss ausgebucht werden.</html>");
        rbGefallen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbGefallenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbGefallen)
                    .addComponent(rbAbgelaufen)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbStellen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLetzte, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEinheiten))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                    .addComponent(rbLeer)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbBestID, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbLeer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbStellen)
                    .addComponent(lblEinheiten)
                    .addComponent(txtLetzte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbAbgelaufen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbGefallen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbBestID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/artwork/22x22/cancel.png"))); // NOI18N
        btnClose.setText("Schließen");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/artwork/22x22/apply.png"))); // NOI18N
        btnOk.setText("Übernehmen");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClose)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClose)
                    .addComponent(btnOk))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void rbAbgelaufenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAbgelaufenActionPerformed
    txtLetzte.setEnabled(rbStellen.isSelected());
}//GEN-LAST:event_rbAbgelaufenActionPerformed

private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
    dispose();
}//GEN-LAST:event_btnCloseActionPerformed

    private void initDialog() {
        this.setTitle(SYSTools.getWindowTitle("Bestand abschließen"));
        String text = "Sie möchten den Bestand mit der Nummer <font color=\"red\"><b>" + bestid + "</b></font> abschließen.";
        text += DBHandling.getBestandTextAsHTML(bestid);
        text += "<br/>Bitte wählen Sie einen der drei folgenden Gründe für den Abschluss:";
        txtInfo.setContentType("text/html");
        txtInfo.setText(SYSTools.toHTML(text));
        cmbBestID.setModel(DBHandling.getBestandGeschlossen(vorid));
        int index = Math.min(2, cmbBestID.getItemCount());
        cmbBestID.setSelectedIndex(index - 1);
        lblEinheiten.setText(DBHandling.getPackEinheit(dafid) + " verbraucht");
        txtLetzte.setText("");
        txtLetzte.setEnabled(false);
        SYSTools.centerOnParent(parent, this);
        // Das mit dem Vorabstellen nur bei Formen, die auf Stück basieren also APV = 1
        rbStellen.setEnabled(formstatus == DBHandling.FORMSTATUS_APV1);
        setVisible(true);
    }

    @Override
    public void dispose() {
        SYSTools.unregisterListeners(this);
        super.dispose();
    }

private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
    save();//GEN-LAST:event_btnOkActionPerformed
        dispose();
    }

private void rbStellenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbStellenActionPerformed
    txtLetzte.setEnabled(true);
    txtLetzte.requestFocus();
}//GEN-LAST:event_rbStellenActionPerformed

private void rbLeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbLeerActionPerformed
    txtLetzte.setEnabled(rbStellen.isSelected());
}//GEN-LAST:event_rbLeerActionPerformed

private void txtLetzteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLetzteFocusLost
    try {
        double inhalt = Double.parseDouble(txtLetzte.getText().replace(",", "."));
        if (inhalt <= 0d) {
            txtLetzte.setText("1");
        }
    } catch (NumberFormatException ex) {
        txtLetzte.setText("1");
    }
}//GEN-LAST:event_txtLetzteFocusLost

private void cmbBestIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbBestIDItemStateChanged
    if (cmbBestID.getSelectedIndex() == 0) {
        cmbBestID.setToolTipText(null);
    } else {
        cmbBestID.setToolTipText(SYSTools.toHTML(DBHandling.getBestandTextAsHTML((Long) cmbBestID.getSelectedItem())));
    }
}//GEN-LAST:event_cmbBestIDItemStateChanged

private void rbGefallenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbGefallenActionPerformed
    txtLetzte.setEnabled(rbStellen.isSelected());
}//GEN-LAST:event_rbGefallenActionPerformed

    private void save() {
        String classname = this.getClass().getName() + ".save()";
        try {
            OPDE.info("Bestands Nr. " + bestid + " wird abgeschlossen");
            OPDE.info("UKennung: " + OPDE.getLogin().getUser().getUKennung());
            HashMap hm = new HashMap();
            long nextbest = 0;
            if (cmbBestID.getSelectedIndex() > 0) {
                nextbest = (Long) cmbBestID.getSelectedItem();
            }

            if (rbStellen.isSelected()) {
                //try {
                hm.put("NextBest", nextbest);
                double inhalt = Double.parseDouble(txtLetzte.getText().replace(",", "."));
                DBHandling.setzeBestand(bestid, inhalt, "Korrekturbuchung zum Packungsabschluss", DBHandling.STATUS_KORREKTUR_AUTO_VORAB);
                op.tools.DBHandling.updateRecord("MPBestand", hm, "BestID", bestid);
                OPDE.info(classname + ": Vorabstellen angeklickt. Sind noch " + inhalt + " in der Packung.");
                OPDE.info(classname + ": Nächste Packung im Anbruch wird die Bestands Nr.: " + nextbest + " sein.");
                //} catch (SQLException ex) {
                //    new DlgException(ex);
                //}
            } else {
                if (rbGefallen.isSelected()) {
                    DBHandling.closeBestand(bestid, "Packung ist runtergefallen.", false, DBHandling.STATUS_KORREKTUR_AUTO_RUNTERGEFALLEN);
                    OPDE.info(classname + ": Runtergefallen angeklickt.");
                } else if (rbAbgelaufen.isSelected()) {
                    DBHandling.closeBestand(bestid, "Packung ist abgelaufen.", false, DBHandling.STATUS_KORREKTUR_AUTO_ABGELAUFEN);
                    OPDE.info(classname + ": Abgelaufen angeklickt.");
                } else {
                    DBHandling.closeBestand(bestid, "Korrekturbuchung zum Packungsabschluss", true, DBHandling.STATUS_KORREKTUR_AUTO_LEER);
                    OPDE.info(classname + ": Packung ist nun leer angeklickt.");
                }
                if (nextbest > 0) {
                    DBHandling.anbrechen(nextbest);
                    OPDE.info(classname + ": Nächste Packung mit Bestands Nr.: " + nextbest + " wird nun angebrochen.");
                }
                if (!DBHandling.hasAnbruch(vorid)) { // Keine mehr im Anbruch ?
                    // Dann alles absetzen, was zu diesem Vorrat gehörte und bis PackEnde lief.
                    op.care.verordnung.DBHandling.absetzenBisPackEnde2Vorrat(vorid);
                }
            }
            OPDE.info(classname + ": Operation beendet.");
        } catch (Exception e) {
            OPDE.info(classname + ":" + e.getMessage());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnOk;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cmbBestID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblEinheiten;
    private javax.swing.JRadioButton rbAbgelaufen;
    private javax.swing.JRadioButton rbGefallen;
    private javax.swing.JRadioButton rbLeer;
    private javax.swing.JRadioButton rbStellen;
    private javax.swing.JTextPane txtInfo;
    private javax.swing.JTextField txtLetzte;
    // End of variables declaration//GEN-END:variables
}
