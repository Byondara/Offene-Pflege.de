/*
 * OffenePflege
 * Copyright (C) 2008 Torsten Löhr
 * This program is free software; you can redistribute it and/or modify it under the terms of the 
 * GNU General Public License V2 as published by the Free Software Foundation
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even 
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General 
 * Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with this program; if not, write to 
 * the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA
 * www.offene-pflege.de
 * ------------------------ 
 * Auf deutsch (freie Übersetzung. Rechtlich gilt die englische Version)
 * Dieses Programm ist freie Software. Sie können es unter den Bedingungen der GNU General Public License, 
 * wie von der Free Software Foundation veröffentlicht, weitergeben und/oder modifizieren, gemäß Version 2 der Lizenz.
 *
 * Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, daß es Ihnen von Nutzen sein wird, aber 
 * OHNE IRGENDEINE GARANTIE, sogar ohne die implizite Garantie der MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN 
 * BESTIMMTEN ZWECK. Details finden Sie in der GNU General Public License.
 *
 * Sie sollten ein Exemplar der GNU General Public License zusammen mit diesem Programm erhalten haben. Falls nicht, 
 * schreiben Sie an die Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA.
 * 
 */

package op.care.med.vorrat;

import java.awt.event.*;
import com.jgoodies.forms.factories.CC;
import com.jgoodies.forms.layout.FormLayout;
import entity.prescription.*;
import op.tools.SYSTools;
import org.apache.commons.collections.Closure;

import javax.swing.*;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigDecimal;

/**
 *
 */
public class DlgEditBuchung extends JPanel {
    private BigDecimal menge;
    private Closure actionBlock;
    private BigDecimal bestandsumme;
    private BigDecimal packgroesse;
    private MedStock bestand;
    private MedStockTransaction buchung;

    public DlgEditBuchung(MedStock bestand, Closure actionBlock) {
        this.bestand = bestand;
        this.actionBlock = actionBlock;
        this.buchung = null;
        initDialog();
    }

    private void txtMengeFocusGained(FocusEvent e) {
        SYSTools.markAllTxt(txtMenge);
    }

    private void initDialog() {
        initComponents();
//        setTitle(SYSTools.getWindowTitle("Einzelbuchung"));
        bestandsumme = MedStockTools.getBestandSumme(bestand);

        lblEinheit.setText(TradeFormTools.getPackungsEinheit(bestand.getTradeForm()));

        if (bestand.hasPackung()) {
            packgroesse = bestand.getPackung().getInhalt();
        } else {
            packgroesse = BigDecimal.valueOf(Double.MAX_VALUE);
        }

        txtMenge.setText("0.00");
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel3 = new JLabel();
        scrollPane1 = new JScrollPane();
        txtText = new JTextArea();
        txtMenge = new JTextField();
        jLabel2 = new JLabel();
        lblEinheit = new JLabel();
        panel1 = new JPanel();
        btnCancel = new JButton();
        btnBuchung = new JButton();

        //======== this ========
        setLayout(new FormLayout(
            "default, $lcgap, default, $ugap, 141dlu:grow, $rgap, default, $lcgap, default",
            "default, $lgap, 40dlu, 2*($lgap, fill:default), $lgap, default"));

        //---- jLabel3 ----
        jLabel3.setText("Buchungstext");
        jLabel3.setFont(new Font("Arial", Font.PLAIN, 14));
        add(jLabel3, CC.xy(3, 3, CC.DEFAULT, CC.TOP));

        //======== scrollPane1 ========
        {
            scrollPane1.setViewportView(txtText);
        }
        add(scrollPane1, CC.xywh(5, 3, 3, 1, CC.DEFAULT, CC.FILL));

        //---- txtMenge ----
        txtMenge.setHorizontalAlignment(SwingConstants.RIGHT);
        txtMenge.setText("jTextField1");
        txtMenge.setFont(new Font("Arial", Font.PLAIN, 14));
        txtMenge.addCaretListener(new CaretListener() {
            @Override
            public void caretUpdate(CaretEvent e) {
                txtMengeCaretUpdate(e);
            }
        });
        txtMenge.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                txtMengeFocusGained(e);
            }
        });
        add(txtMenge, CC.xy(5, 5));

        //---- jLabel2 ----
        jLabel2.setText("Menge");
        jLabel2.setFont(new Font("Arial", Font.PLAIN, 14));
        add(jLabel2, CC.xy(3, 5));

        //---- lblEinheit ----
        lblEinheit.setHorizontalAlignment(SwingConstants.TRAILING);
        lblEinheit.setText("jLabel4");
        lblEinheit.setFont(new Font("Arial", Font.PLAIN, 14));
        add(lblEinheit, CC.xy(7, 5));

        //======== panel1 ========
        {
            panel1.setLayout(new BoxLayout(panel1, BoxLayout.X_AXIS));

            //---- btnCancel ----
            btnCancel.setIcon(new ImageIcon(getClass().getResource("/artwork/22x22/cancel.png")));
            btnCancel.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    btnCancelActionPerformed(e);
                }
            });
            panel1.add(btnCancel);

            //---- btnBuchung ----
            btnBuchung.setIcon(new ImageIcon(getClass().getResource("/artwork/22x22/apply.png")));
            btnBuchung.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    btnBuchungActionPerformed(e);
                }
            });
            panel1.add(btnBuchung);
        }
        add(panel1, CC.xywh(5, 7, 3, 1, CC.RIGHT, CC.DEFAULT));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        actionBlock.execute(null);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnBuchungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuchungActionPerformed
        save();
        actionBlock.execute(buchung);
    }//GEN-LAST:event_btnBuchungActionPerformed

    private void save() {
        buchung = new MedStockTransaction(bestand, menge, MedStockTransactionTools.STATUS_KORREKTUR_MANUELL);
        buchung.setText(txtText.getText());
    }

    public JComponent getDefaultFocusComponent(){
        return txtText;
    }

    public MedStockTransaction getBuchung() {
        return buchung;
    }

    private void txtMengeCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtMengeCaretUpdate
        menge = SYSTools.checkBigDecimal(evt, !SYSTools.MUST_BE_POSITIVE);
        if (menge.compareTo(BigDecimal.ZERO) < 0) {
            btnBuchung.setEnabled(menge.negate().compareTo(bestandsumme) <= 0);
        } else if (menge.compareTo(BigDecimal.ZERO) > 0) {
            btnBuchung.setEnabled(menge.compareTo(packgroesse.subtract(bestandsumme)) <= 0);
        } else {
            btnBuchung.setEnabled(false);
        }
    }//GEN-LAST:event_txtMengeCaretUpdate


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel jLabel3;
    private JScrollPane scrollPane1;
    private JTextArea txtText;
    private JTextField txtMenge;
    private JLabel jLabel2;
    private JLabel lblEinheit;
    private JPanel panel1;
    private JButton btnCancel;
    private JButton btnBuchung;
    // End of variables declaration//GEN-END:variables

}
