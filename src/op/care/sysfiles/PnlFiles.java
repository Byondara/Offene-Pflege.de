/*
 * OffenePflege
 * Copyright (C) 2011 Torsten Löhr
 * This program is free software; you can redistribute it and/or modify it under the terms of the
 * GNU General Public License V2 as published by the Free Software Foundation
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
 * Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program; if not, write to
 * the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA
 * www.offene-pflege.de
 * ------------------------
 * Auf deutsch (freie Übersetzung. Rechtlich gilt die englische Version)
 * Dieses Programm ist freie Software. Sie können es unter den Bedingungen der GNU General Public License,
 * wie von der Free Software Foundation veröffentlicht, weitergeben und/oder modifizieren, gemäß Version 2 der Lizenz.
 *
 * Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, daß es Ihnen von Nutzen sein wird, aber
 * OHNE IRGENDEINE GARANTIE, sogar ohne die implizite Garantie der MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN
 * BESTIMMTEN ZWECK. Details finden Sie in der GNU General Public License.
 *
 * Sie sollten ein Exemplar der GNU General Public License zusammen mit diesem Programm erhalten haben. Falls nicht,
 * schreiben Sie an die Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA.
 */
package op.care.sysfiles;

import entity.Bewohner;
import entity.SYSFiles;
import entity.SYSFilesTools;
import op.OPDE;
import op.care.CleanablePanel;
import op.care.FrmPflege;
import op.tools.InternalClassACL;
import op.tools.SYSTools;
import tablemodels.TMSYSFiles;
import tablerenderer.RNDHTML;

import javax.swing.*;
import java.awt.Desktop.Action;
import java.awt.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/**
 * @author tloehr
 */
public class PnlFiles extends CleanablePanel {
    // Wird für die Zuordnung beim Rechtesystem innerhalb
    // OCRights Tabelle benötigt.

    public static final String internalClassID = "nursingrecords.files";
    private JPopupMenu menu;
    private Bewohner bewohner;
    private javax.swing.JFrame parent;


    /**
     * Creates new form PnlFiles
     */
    public PnlFiles(FrmPflege pflege) {
        initComponents();

        bewohner = OPDE.getEM().find(Bewohner.class, pflege.getCurrentBW());
        this.parent = pflege;
        SYSTools.setBWLabel(lblBW, bewohner.getBWKennung());
        tblFiles.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        btnNew.setEnabled(OPDE.getInternalClasses().userHasAccessLevelForThisClass(internalClassID, InternalClassACL.INSERT));

        loadTable();
    }

    @Override
    public void cleanup() {
        SYSTools.unregisterListeners(menu);
        SYSTools.unregisterListeners(this);
    }

    void loadTable() {

        List<SYSFiles> files = new ArrayList<SYSFiles>(SYSFilesTools.findByBewohner(bewohner));
        Collections.sort(files);

        tblFiles.setModel(new TMSYSFiles(files));
        tblFiles.getColumnModel().getColumn(0).setCellRenderer(new RNDHTML());
        tblFiles.getColumnModel().getColumn(1).setCellRenderer(new RNDHTML());
        tblFiles.getColumnModel().getColumn(2).setCellRenderer(new RNDHTML());
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnNew = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        lblBW = new javax.swing.JLabel();
        jspFiles = new javax.swing.JScrollPane();
        tblFiles = new javax.swing.JTable();

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/artwork/22x22/filenew.png"))); // NOI18N
        btnNew.setText("Neu / Upload");
        btnNew.setFocusable(false);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNew);

        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/artwork/22x22/lock.png"))); // NOI18N
        btnLogout.setText("Abmelden");
        btnLogout.setFocusable(false);
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutbtnLogoutHandler(evt);
            }
        });
        jToolBar1.add(btnLogout);

        lblBW.setFont(new java.awt.Font("Dialog", 1, 18));
        lblBW.setForeground(new java.awt.Color(255, 51, 0));
        lblBW.setText("jLabel3");

        jspFiles.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jspFilesComponentResized(evt);
            }
        });

        tblFiles.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String[]{
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        tblFiles.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblFiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblFilesMousePressed(evt);
            }
        });
        jspFiles.setViewportView(tblFiles);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                                .add(12, 12, 12)
                                .add(lblBW, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
                                .addContainerGap())
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jToolBar1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE)
                        .add(layout.createSequentialGroup()
                                .addContainerGap()
                                .add(jspFiles, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                                .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(lblBW, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jspFiles, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        new DlgNewFile(parent, bewohner);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnLogoutbtnLogoutHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutbtnLogoutHandler
        OPDE.ocmain.lockOC();
    }//GEN-LAST:event_btnLogoutbtnLogoutHandler

    private void tblFilesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFilesMousePressed

        Point p = evt.getPoint();
        ListSelectionModel lsm = tblFiles.getSelectionModel();

        boolean singleRowSelected = lsm.getMaxSelectionIndex() == lsm.getMinSelectionIndex();

        int row = tblFiles.rowAtPoint(p);
        if (singleRowSelected) {
            lsm.setSelectionInterval(row, row);
        }

        TMSYSFiles tm = (TMSYSFiles) tblFiles.getModel();
        final SYSFiles sysfile = tm.getRow(row);

        if (evt.isPopupTrigger()) {

            SYSTools.unregisterListeners(menu);
            menu = new JPopupMenu();

            // SELECT
            JMenuItem itemPopupShow = new JMenuItem("Anzeigen");
            itemPopupShow.addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    SYSFilesTools.handleFile(sysfile, Action.OPEN);
                }
            });
            menu.add(itemPopupShow);
            itemPopupShow.setEnabled(OPDE.getInternalClasses().userHasAccessLevelForThisClass(internalClassID, InternalClassACL.SELECT));

            JMenuItem itemPopupDelete = new JMenuItem("Löschen");
            itemPopupDelete.addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    if (JOptionPane.showConfirmDialog(parent, "Möchten Sie diese Datei wirklich löschen ?",
                            "Datei löschen ?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        SYSFilesTools.deleteFile(sysfile);
                        loadTable();
                    }
                }
            });
            menu.add(itemPopupDelete);
            itemPopupDelete.setEnabled(OPDE.getInternalClasses().userHasAccessLevelForThisClass(internalClassID, InternalClassACL.DELETE));

            menu.show(evt.getComponent(), (int) p.getX(), (int) p.getY());
        } else {
            if (evt.getClickCount() == 2 && OPDE.getInternalClasses().userHasAccessLevelForThisClass(internalClassID, InternalClassACL.SELECT)) { // DoppelClick
                SYSFilesTools.handleFile(sysfile, Action.OPEN);
            }
        }


    }//GEN-LAST:event_tblFilesMousePressed

    private void jspFilesComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jspFilesComponentResized
        JScrollPane jsp = (JScrollPane) evt.getComponent();
        Dimension dim = jsp.getSize();
        // Größe der Text Spalte im TB ändern.
        // Summe der fixen Spalten  = 210 + ein bisschen
        int textWidth = dim.width - 100 - 25;
        tblFiles.getColumnModel().getColumn(0).setPreferredWidth(textWidth / 2);
        tblFiles.getColumnModel().getColumn(1).setPreferredWidth(textWidth / 2);
        tblFiles.getColumnModel().getColumn(2).setPreferredWidth(100);
    }//GEN-LAST:event_jspFilesComponentResized

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnNew;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JScrollPane jspFiles;
    private javax.swing.JLabel lblBW;
    private javax.swing.JTable tblFiles;
    // End of variables declaration//GEN-END:variables
}
